# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

### added by wopl ####################

  # register service to run method after successful login
##  app.security_listener:
##    class: AppBundle\Listener\SecurityListener
#    arguments: ["@service_container"]
##    tags:
##      - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }

  # run a custom user_provider to verify login credentials  
##  app.user_provider:
##    class: AppBundle\Security\User\UserProvider

  # run my own authenticator for account credentials --- test only, not needed at this time
#  app.token_authenticator:
#   class: AppBundle\Security\TokenAuthenticator

##    AppBundle\Menu\MenuBuilder\:  
    app.menu_builder:
        class: AppBundle\Menu\MenuBuilder
##        resource: '../../src/AppBundle/Menu/MenuBuilder'
        public: true
        arguments: ["@knp_menu.factory"]
        tags:
          - { name: knp_menu.menu_builder, method: createMainMenu, alias: mainMenu }
          - { name: knp_menu.menu_builder, method: createLoginMenu, alias: loginMenu }

    Knp\Menu\FactoryInterface:
        alias: knp_menu.factory
        public: false

################################################

### aus dem Internet #############################
#
#app.component_menu.builder:
#    class: AppBundle\Component\Menu\Builder
#    arguments: ['@knp_menu.factory', '@event_dispatcher']
#    calls:
#        - [setAuthorizationChecker, ['@security.authorization_checker']]
#
#
#Knp\Menu\ItemInterface:
#    class: Knp\Menu\MenuItem
#    factory: ['@app.component_menu.builder', mainMenu]
#    arguments: ['@knp_menu.matcher']
#    tags:
#        - { name: knp_menu.menu, alias: main }
#
#Knp\Menu\FactoryInterface:
#    alias: knp_menu.factory
#    public: false
################################################
